[{"/home/shikharbansal/personal-website/demonicode.github.io/src/index.js":"1","/home/shikharbansal/personal-website/demonicode.github.io/src/reportWebVitals.js":"2","/home/shikharbansal/personal-website/demonicode.github.io/src/App.js":"3","/home/shikharbansal/personal-website/demonicode.github.io/src/components/Home/index.js":"4","/home/shikharbansal/personal-website/demonicode.github.io/src/components/Contact/index.js":"5","/home/shikharbansal/personal-website/demonicode.github.io/src/components/About/index.js":"6","/home/shikharbansal/personal-website/demonicode.github.io/src/components/Layout/index.js":"7","/home/shikharbansal/personal-website/demonicode.github.io/src/components/Portfolio/index.js":"8","/home/shikharbansal/personal-website/demonicode.github.io/src/firebase.js":"9","/home/shikharbansal/personal-website/demonicode.github.io/src/components/Sidebar/index.js":"10","/home/shikharbansal/personal-website/demonicode.github.io/src/components/AnimatedLetters/index.js":"11","/home/shikharbansal/personal-website/demonicode.github.io/src/components/Home/Logo/index.js":"12"},{"size":591,"mtime":1710313159456,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1710313159456,"results":"15","hashOfConfig":"14"},{"size":778,"mtime":1711570466033,"results":"16","hashOfConfig":"14"},{"size":1857,"mtime":1711608744616,"results":"17","hashOfConfig":"14"},{"size":3328,"mtime":1711572753623,"results":"18","hashOfConfig":"14"},{"size":2205,"mtime":1711568620873,"results":"19","hashOfConfig":"14"},{"size":505,"mtime":1710313159456,"results":"20","hashOfConfig":"14"},{"size":2488,"mtime":1711571767643,"results":"21","hashOfConfig":"14"},{"size":686,"mtime":1711570375573,"results":"22","hashOfConfig":"14"},{"size":2981,"mtime":1711572483963,"results":"23","hashOfConfig":"14"},{"size":306,"mtime":1710313159456,"results":"24","hashOfConfig":"14"},{"size":4484,"mtime":1711585293554,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fpcpmf",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shikharbansal/personal-website/demonicode.github.io/src/index.js",[],[],"/home/shikharbansal/personal-website/demonicode.github.io/src/reportWebVitals.js",[],[],"/home/shikharbansal/personal-website/demonicode.github.io/src/App.js",[],[],"/home/shikharbansal/personal-website/demonicode.github.io/src/components/Home/index.js",["65"],[],"import { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Loader from 'react-loaders'\nimport AnimatedLetters from '../AnimatedLetters'\nimport LogoTitle from '../../assets/images/logo-s.png'\nimport Logo from './Logo'\nimport './index.scss'\n\nconst Home = () => {\n  const [letterClass, setLetterClass] = useState('text-animate')\n\n  const nameArray = ['S', 'h', 'i', 'k', 'h', 'a', 'r']\n  const jobArray = [\n    's',\n    'o',\n    'f',\n    't',\n    'w',\n    'a',\n    'r',\n    'e',\n    ' ',\n    'd',\n    'e',\n    'v',\n    'e',\n    'l',\n    'o',\n    'p',\n    'e',\n    'r',\n    '.',\n  ]\n\n  useEffect(() => {\n    return setTimeout(() => {\n      setLetterClass('text-animate-hover')\n    }, 4000)\n  }, [])\n\n  return (\n    <>\n      <div className=\"container home-page\">\n        <div className=\"text-zone\">\n          <h1>\n            <span className={letterClass}>H</span>\n            <span className={`${letterClass} _12`}>i,</span>\n            <br />\n            <span className={`${letterClass} _13`}>I</span>\n            <span className={`${letterClass} _14`}>'m </span>\n            <span > </span>\n\n            {/* <img\n              src={LogoTitle}\n              alt=\"Software Developer Name, Web Developer Name\"\n            /> */}\n            <AnimatedLetters\n              letterClass={letterClass}\n              strArray={nameArray}\n              idx={15}\n            />\n            <br />\n            <AnimatedLetters\n              letterClass={letterClass}\n              strArray={jobArray}\n              idx={22}\n            />\n          </h1>\n          <h2>Back End Developer / Java Expert / Distributed Systems</h2>\n          <Link to=\"/contact\" className=\"flat-button\">\n            CONTACT ME\n          </Link>\n        </div>\n        <Logo />\n      </div>\n\n      <Loader type=\"pacman\" />\n    </>\n  )\n}\n\nexport default Home\n","/home/shikharbansal/personal-website/demonicode.github.io/src/components/Contact/index.js",[],[],"/home/shikharbansal/personal-website/demonicode.github.io/src/components/About/index.js",[],[],"/home/shikharbansal/personal-website/demonicode.github.io/src/components/Layout/index.js",[],[],"/home/shikharbansal/personal-website/demonicode.github.io/src/components/Portfolio/index.js",["66","67"],[],"import React, { useEffect, useState } from \"react\";\nimport Loader from \"react-loaders\";\nimport AnimatedLetters from \"../AnimatedLetters\";\nimport \"./index.scss\";\n// import { getDocs, collection } from 'firebase/firestore';\nimport { db } from '../../firebase';\n\nconst Portfolio = () => { \n    const [letterClass, setLetterClass] = useState('text-animate');\n    const [portfolio, setPortfolio] = useState([]);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setLetterClass('text-animate-hover');\n        }, 3000);\n\n        return () => {\n            clearTimeout(timer);\n        }\n    });\n\n    // useEffect(() => {\n    //     getPortfolio();\n    // }, []);\n\n    // const getPortfolio = async () => {\n    //     const querySnapshot = await getDocs(collection(db, 'portfolio'));\n    //     setPortfolio(querySnapshot.docs.map((doc) => doc.data()));\n    // }\n\n    const renderPortfolio = (portfolio) => {\n        return (\n            <div className=\"images-container\">\n                {\n                    portfolio.map((port, idx) => {\n                        return (\n                            <div className=\"image-box\" key={idx}>\n                                <img \n                                src={port.image}\n                                className=\"portfolio-image\"\n                                alt=\"portfolio\" />\n                                <div className=\"content\">\n                                    <p className=\"title\">{port.name}</p>\n                                    <h4 className=\"description\">{port.description}</h4>\n                                    <button\n                                        className=\"btn\"\n                                        onClick={() => window.open(port.url)}\n                                    >View</button>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        );\n    }\n\n\n    return (\n        <>\n            <div className=\"container portfolio-page\">\n                <h1 className=\"page-title\">\n                    <AnimatedLetters\n                        letterClass={letterClass}\n                        strArray={\"Portfolio\".split(\"\")}\n                        idx={15}\n                    />\n                </h1>\n                <div>{renderPortfolio(portfolio)}</div>\n            </div>\n            <Loader type=\"pacman\" />\n        </>\n    );\n}\n\nexport default Portfolio;","/home/shikharbansal/personal-website/demonicode.github.io/src/firebase.js",[],[],"/home/shikharbansal/personal-website/demonicode.github.io/src/components/Sidebar/index.js",["68","69","70"],[],"import './index.scss'\nimport { useState } from 'react'\nimport LogoS from '../../assets/images/logo-s.png'\nimport LogoSubtitle from '../../assets/images/logo_sub.png'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faLinkedin,\n  faGithub,\n  faYoutube,\n  faSkype,\n} from '@fortawesome/free-brands-svg-icons'\nimport {\n  faHome,\n  faUser,\n  faEnvelope,\n  faSuitcase,\n  faBars,\n  faClose,\n} from '@fortawesome/free-solid-svg-icons'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst Sidebar = () => {\n  const [showNav, setShowNav] = useState(false);\n\n  return (\n    <div className=\"nav-bar\">\n      <Link \n        className=\"logo\"\n        to=\"/\"\n        onClick={() => setShowNav(false)}>\n        <img src={LogoS} alt=\"Logo\" />\n        {/* <img className=\"sub-logo\" src={LogoSubtitle} alt=\"Shikhar\" /> */}\n        <div className=\"sub-logo-text\">Shikhar</div>\n      </Link>\n      <nav className={showNav ? 'mobile-show' : ''}>\n        <NavLink \n          exact=\"true\"\n          activeclassname=\"active\"\n          to=\"/\"\n          onClick={() => setShowNav(false)}>\n          <FontAwesomeIcon icon={faHome} color=\"#4d4d4e\" />\n        </NavLink>\n        <NavLink \n          activeclassname=\"active\"\n          className=\"about-link\"\n          to=\"/about\"\n          onClick={() => setShowNav(false)}>\n          <FontAwesomeIcon icon={faUser} color=\"#4d4d4e\" />\n        </NavLink>\n        <NavLink\n          activeclassname=\"active\"\n          className=\"portfolio-link\"\n          to=\"/portfolio\"\n          onClick={() => setShowNav(false)}\n        >\n          <FontAwesomeIcon icon={faSuitcase} color=\"#4d4d4e\" />\n        </NavLink>\n        <NavLink\n          activeclassname=\"active\"\n          className=\"contact-link\"\n          to=\"/contact\"\n          onClick={() => setShowNav(false)}\n        >\n          <FontAwesomeIcon icon={faEnvelope} color=\"#4d4d4e\" />\n        </NavLink>\n        <FontAwesomeIcon \n          onClick={() => setShowNav(false)}\n          icon={faClose}\n          color=\"#ffd700\"\n          size=\"3x\"\n          className='close-icon' />\n      </nav>\n      <ul>\n        <li>\n          <a\n            href=\"https://www.linkedin.com/in/shikharbansal111/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <FontAwesomeIcon\n              icon={faLinkedin}\n              color=\"#4d4d4e\"\n              className=\"anchor-icon\"\n            />\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://github.com/demonicode\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <FontAwesomeIcon\n              icon={faGithub}\n              color=\"#4d4d4e\"\n              className=\"anchor-icon\"\n            />\n          </a>\n        </li>\n      </ul>\n      <FontAwesomeIcon \n          onClick={() => setShowNav(true)}\n          icon={faBars}\n          color=\"#ffd700\"\n          size=\"3x\"\n          className='hamburger-icon' />\n    </div>\n  )\n}\n\nexport default Sidebar\n","/home/shikharbansal/personal-website/demonicode.github.io/src/components/AnimatedLetters/index.js",[],[],"/home/shikharbansal/personal-website/demonicode.github.io/src/components/Home/Logo/index.js",[],[],{"ruleId":"71","severity":1,"message":"72","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":17},{"ruleId":"71","severity":1,"message":"75","line":6,"column":10,"nodeType":"73","messageId":"74","endLine":6,"endColumn":12},{"ruleId":"71","severity":1,"message":"76","line":10,"column":23,"nodeType":"73","messageId":"74","endLine":10,"endColumn":35},{"ruleId":"71","severity":1,"message":"77","line":4,"column":8,"nodeType":"73","messageId":"74","endLine":4,"endColumn":20},{"ruleId":"71","severity":1,"message":"78","line":9,"column":3,"nodeType":"73","messageId":"74","endLine":9,"endColumn":12},{"ruleId":"71","severity":1,"message":"79","line":10,"column":3,"nodeType":"73","messageId":"74","endLine":10,"endColumn":10},"no-unused-vars","'LogoTitle' is defined but never used.","Identifier","unusedVar","'db' is defined but never used.","'setPortfolio' is assigned a value but never used.","'LogoSubtitle' is defined but never used.","'faYoutube' is defined but never used.","'faSkype' is defined but never used."]